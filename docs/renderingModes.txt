Yeah I started working on something along the lines of a material system, but
come to think of it, this is very unnecessary and would cause the computer to
have to do more work to switch crap or sort things to not switch crap etc etc.

Of course we do need to switch out textures and I will do that the naive way,
but regarding how things are rendered, I think their function within the game
generally tells us enough:
 - Obstacles / Level elements are almost always unshaded.
 - characters and things like that are almost always shaded.

Now ideally, if we have elements that break these conventions, then these
themselves should add the necessary config to their drawlists (this is where
a material object could be useful). Look into whether we can use that opengl
function that pushes and pops a list of configuration or something like that.

Anyway, this means that the material system needs at least three states
per thing (besides texture which is always needed): ON, OFF, and UNDEFINED.
So if the state of a field is ON or OFF, we add stuff to the drawlist that uses
it that way, and if it is UNDEFINED, which is what it will be 90% of the time,
it simply does nothing.

so to begin with the fields in a material object would just be:
 - texture (opengl texture id)
 - lit (on/off/undefined)
 - assorted lighting params